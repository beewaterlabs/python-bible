# math module

>>> math.floor(1.5)
1
>>> math.ceil(2.1)
3
>>> math.pi
3.141592653589793
>>> math.e
2.718281828459045
>>> math.sin(math.pi /2)
1.0
>>> math.sin(math.pi)
1.2246467991473532e-16
>>> math.sin(math.pi)
1.2246467991473532e-16
>>> math.floor(math.sin(math.pi))
0
>>> math.cos(0)
1.0
>>> math.asin(0)
0.0
>>> math.acos(0)
1.5707963267948966

# The hypotenuse is the longest side of a right triangle, which is opposite the right angle. It is derived from the Greek term ὑποτείνουσα (hupoteínousa), meaning "side subtending [the right angle]".
# According to the Pythagorean theorem, the square of the hypotenuse is equal to the sum of the squares of the other two sides (base and perpendicular) of the right triangle, expressed as 
# a2 + b2 = c2 
# c is the hypotenuse
# The following example: a = 3, b = 4
# a2 = 9, b2 = 16 a + b = 25 ---> c = a + b / 5 <--- c2

>>> math.hypot(3,4)
5.0

# This saves time, you would need to do all of this.
# idle3:
>>> a = 3
>>> b = 4
>>> a2 = int(a ** 2)
>>> print(a2)
9
>>> b2 = int(b ** 2)
>>> print(b2)
16
>>> c = a2 + b2
>>> print(c)
25
>>> square_of_c = int(5 ** 2 / 5)
>>> print(square_of_c)
5

# WIP
hypotenuse_long_hand.py

a = 3
b = 4
a2 = int(a ** 2)
print(a2)
b2 = int(b ** 2)
print(b2)
c = a2 + b2
print(c)
square_of_c = int(5 ** 2 / 5)
print(square_of_c)


